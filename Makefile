#############################################################################
# Makefile for building: QtNetworkMon
# Generated by qmake (2.01a) (Qt 4.2.3) on: Wed May 9 16:29:48 2007
# Project:  QtNetworkMon.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile QtNetworkMon.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT  $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -L ./usr/lib -lpcap -lQtGui -lQtNetwork -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		ThreadListener.cpp \
		WinPcapFns.cpp \
		GUI/MainWindow.cpp \
		GUI/Scope.cpp \
		GUI/Console.cpp moc_ThreadListener.cpp \
		moc_MainWindow.cpp \
		moc_Scope.cpp \
		moc_Console.cpp
OBJECTS       = main.o \
		ThreadListener.o \
		WinPcapFns.o \
		MainWindow.o \
		Scope.o \
		Console.o \
		moc_ThreadListener.o \
		moc_MainWindow.o \
		moc_Scope.o \
		moc_Console.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		QtNetworkMon.pro
QMAKE_TARGET  = QtNetworkMon
DESTDIR       = 
TARGET        = QtNetworkMon

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: QtNetworkMon.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf
	$(QMAKE) -unix -o Makefile QtNetworkMon.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile QtNetworkMon.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/QtNetworkMon1.0.0 || $(MKDIR) .tmp/QtNetworkMon1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/QtNetworkMon1.0.0/ && $(COPY_FILE) --parents WinPcapFns.h ThreadListener.h GUI/MainWindow.h GUI/Scope.h GUI/Console.h .tmp/QtNetworkMon1.0.0/ && $(COPY_FILE) --parents main.cpp ThreadListener.cpp WinPcapFns.cpp GUI/MainWindow.cpp GUI/Scope.cpp GUI/Console.cpp .tmp/QtNetworkMon1.0.0/ && (cd `dirname .tmp/QtNetworkMon1.0.0` && $(TAR) QtNetworkMon1.0.0.tar QtNetworkMon1.0.0 && $(COMPRESS) QtNetworkMon1.0.0.tar) && $(MOVE) `dirname .tmp/QtNetworkMon1.0.0`/QtNetworkMon1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/QtNetworkMon1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/bin/moc-qt4:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_ThreadListener.cpp moc_MainWindow.cpp moc_Scope.cpp moc_Console.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_ThreadListener.cpp moc_MainWindow.cpp moc_Scope.cpp moc_Console.cpp
moc_ThreadListener.cpp: WinPcapFns.h \
		ThreadListener.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ThreadListener.h -o moc_ThreadListener.cpp

moc_MainWindow.cpp: WinPcapFns.h \
		ThreadListener.h \
		GUI/Scope.h \
		GUI/Console.h \
		GUI/MainWindow.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/MainWindow.h -o moc_MainWindow.cpp

moc_Scope.cpp: GUI/Scope.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/Scope.h -o moc_Scope.cpp

moc_Console.cpp: GUI/Console.h \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GUI/Console.h -o moc_Console.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

main.o: main.cpp WinPcapFns.h \
		GUI/MainWindow.h \
		ThreadListener.h \
		GUI/Scope.h \
		GUI/Console.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

ThreadListener.o: ThreadListener.cpp ThreadListener.h \
		WinPcapFns.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ThreadListener.o ThreadListener.cpp

WinPcapFns.o: WinPcapFns.cpp WinPcapFns.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WinPcapFns.o WinPcapFns.cpp

MainWindow.o: GUI/MainWindow.cpp GUI/MainWindow.h \
		WinPcapFns.h \
		ThreadListener.h \
		GUI/Scope.h \
		GUI/Console.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MainWindow.o GUI/MainWindow.cpp

Scope.o: GUI/Scope.cpp GUI/Scope.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Scope.o GUI/Scope.cpp

Console.o: GUI/Console.cpp GUI/Console.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Console.o GUI/Console.cpp

moc_ThreadListener.o: moc_ThreadListener.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ThreadListener.o moc_ThreadListener.cpp

moc_MainWindow.o: moc_MainWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MainWindow.o moc_MainWindow.cpp

moc_Scope.o: moc_Scope.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Scope.o moc_Scope.cpp

moc_Console.o: moc_Console.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Console.o moc_Console.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

